; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_adc.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_adc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\USMART -I..\..\User\bsp_stm32f4xx\LCD -I..\..\User\bsp_stm32f4xx\phase_shift -I..\..\User\bsp_stm32f4xx\PWMInput -I..\..\User\bsp_stm32f4xx\ADC -D__MICROLIB -D__UVISION_VERSION=525 -D_RTE_ -DSTM32F427xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 --omf_browse=.\flash\obj\bsp_adc.crf ..\..\User\bsp_stm32f4xx\src\bsp_adc.c]
                          THUMB

                          AREA ||i.Reduction_Factor_Modify||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  Reduction_Factor_Modify PROC
;;;113    
;;;114    void Reduction_Factor_Modify(uint16_t u)
000000  b570              PUSH     {r4-r6,lr}
;;;115    {
000002  ed2d8b04          VPUSH    {d8-d9}
000006  4604              MOV      r4,r0
;;;116    	uint16_t a;
;;;117    	a = u;
000008  4625              MOV      r5,r4
;;;118    	if(1)
;;;119    		reduction_factor = reduction_factor + 0.05;
00000a  4815              LDR      r0,|L1.96|
00000c  ed900a00          VLDR     s0,[r0,#0]
000010  ee100a10          VMOV     r0,s0
000014  f7fffffe          BL       __aeabi_f2d
000018  ec410b19          VMOV     d9,r0,r1
00001c  ed9f0b11          VLDR     d0,|L1.100|
000020  ec532b10          VMOV     r2,r3,d0
000024  f7fffffe          BL       __aeabi_dadd
000028  ec410b18          VMOV     d8,r0,r1
00002c  f7fffffe          BL       __aeabi_d2f
000030  ee000a10          VMOV     s0,r0
000034  480a              LDR      r0,|L1.96|
000036  ed800a00          VSTR     s0,[r0,#0]
;;;120    	else
;;;121    		reduction_factor = reduction_factor - 0.05;
;;;122    	
;;;123    	printf(" reduction_factor = %f \r\n",reduction_factor);
00003a  ed900a00          VLDR     s0,[r0,#0]
00003e  ee100a10          VMOV     r0,s0
000042  f7fffffe          BL       __aeabi_f2d
000046  ec410b18          VMOV     d8,r0,r1
00004a  ec532b18          VMOV     r2,r3,d8
00004e  a007              ADR      r0,|L1.108|
000050  f7fffffe          BL       __2printf
;;;124    	printf("Test!!!\r\n");
000054  a00c              ADR      r0,|L1.136|
000056  f7fffffe          BL       __2printf
;;;125    }
00005a  ecbd8b04          VPOP     {d8-d9}
00005e  bd70              POP      {r4-r6,pc}
;;;126    
                          ENDP

                  |L1.96|
                          DCD      reduction_factor
                  |L1.100|
000064  9999999a          DCFD     0x3fa999999999999a ; 0.050000000000000003
000068  3fa99999
                  |L1.108|
00006c  20726564          DCB      " reduction_factor = %f \r\n",0
000070  75637469
000074  6f6e5f66
000078  6163746f
00007c  72203d20
000080  2566200d
000084  0a00    
000086  00                DCB      0
000087  00                DCB      0
                  |L1.136|
000088  54657374          DCB      "Test!!!\r\n",0
00008c  2121210d
000090  0a00    
000092  00                DCB      0
000093  00                DCB      0

                          AREA ||i.bsp_InitADC||, CODE, READONLY, ALIGN=2

                  bsp_InitADC PROC
;;;37     */
;;;38     void bsp_InitADC(void)
000000  b500              PUSH     {lr}
;;;39     {  
000002  b09b              SUB      sp,sp,#0x6c
;;;40         ADC_InitTypeDef       ADC_InitStructure;
;;;41         ADC_CommonInitTypeDef ADC_CommonInitStructure;
;;;42         DMA_InitTypeDef       DMA_InitStructure;
;;;43         GPIO_InitTypeDef      GPIO_InitStructure;
;;;44     
;;;45         /* 使能 ADC3, DMA2 和 GPIO 时钟 ****************************************/
;;;46         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_DMA2 | RCC_AHB1Periph_GPIOC | RCC_AHB1Periph_DMA1, ENABLE);
000004  2101              MOVS     r1,#1
000006  4838              LDR      r0,|L2.232|
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;47         RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC3, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  0288              LSLS     r0,r1,#10
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;48     
;;;49         /* DMA2 Stream0 channel2 配置 **************************************/
;;;50         DMA_InitStructure.DMA_Channel = DMA_Channel_2;  
000014  f04f6080          MOV      r0,#0x4000000
000018  9002              STR      r0,[sp,#8]
;;;51         DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC3_DR_ADDRESS;
00001a  4834              LDR      r0,|L2.236|
00001c  9003              STR      r0,[sp,#0xc]
;;;52         DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)ADC3ConvertedValue;
00001e  4834              LDR      r0,|L2.240|
000020  9004              STR      r0,[sp,#0x10]
;;;53         DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
000022  2000              MOVS     r0,#0
000024  9005              STR      r0,[sp,#0x14]
;;;54         DMA_InitStructure.DMA_BufferSize = 20;
000026  2014              MOVS     r0,#0x14
000028  9006              STR      r0,[sp,#0x18]
;;;55         DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
00002a  2000              MOVS     r0,#0
00002c  9007              STR      r0,[sp,#0x1c]
;;;56         DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
00002e  f44f6080          MOV      r0,#0x400
000032  9008              STR      r0,[sp,#0x20]
;;;57         DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
000034  0040              LSLS     r0,r0,#1
000036  9009              STR      r0,[sp,#0x24]
;;;58         DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
000038  0080              LSLS     r0,r0,#2
00003a  900a              STR      r0,[sp,#0x28]
;;;59         DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
00003c  1140              ASRS     r0,r0,#5
00003e  900b              STR      r0,[sp,#0x2c]
;;;60         DMA_InitStructure.DMA_Priority = DMA_Priority_High;
000040  0240              LSLS     r0,r0,#9
000042  900c              STR      r0,[sp,#0x30]
;;;61         DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;         
000044  2000              MOVS     r0,#0
000046  900d              STR      r0,[sp,#0x34]
;;;62         DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull;
000048  2001              MOVS     r0,#1
00004a  900e              STR      r0,[sp,#0x38]
;;;63         DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
00004c  2000              MOVS     r0,#0
00004e  900f              STR      r0,[sp,#0x3c]
;;;64         DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
000050  9010              STR      r0,[sp,#0x40]
;;;65         DMA_Init(DMA2_Stream0, &DMA_InitStructure);
000052  a902              ADD      r1,sp,#8
000054  4827              LDR      r0,|L2.244|
000056  f7fffffe          BL       DMA_Init
;;;66         DMA_Cmd(DMA2_Stream0, ENABLE);
00005a  2101              MOVS     r1,#1
00005c  4825              LDR      r0,|L2.244|
00005e  f7fffffe          BL       DMA_Cmd
;;;67     
;;;68         /* 配置ADC3通道10引脚为模拟输入模式******************************/
;;;69         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
000062  2002              MOVS     r0,#2
000064  9000              STR      r0,[sp,#0]
;;;70         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000066  2003              MOVS     r0,#3
000068  f88d0004          STRB     r0,[sp,#4]
;;;71         GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00006c  2000              MOVS     r0,#0
00006e  f88d0007          STRB     r0,[sp,#7]
;;;72         GPIO_Init(GPIOC, &GPIO_InitStructure);
000072  4669              MOV      r1,sp
000074  4820              LDR      r0,|L2.248|
000076  f7fffffe          BL       GPIO_Init
;;;73     
;;;74         /****************************************************************************   
;;;75     	  PCLK2 = HCLK / 2 
;;;76     	  下面选择的是2分频
;;;77     	  ADCCLK = PCLK2 /2 = HCLK / 4 = 168 / 4 = 42M
;;;78           ADC采样频率： Sampling Time + Conversion Time = 3 + 12 cycles = 15cyc
;;;79                         Conversion Time = 42MHz / 15cyc = 2.8Mbps. 
;;;80     	*****************************************************************************/
;;;81         /* ADC公共部分初始化**********************************************************/
;;;82         ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
00007a  2000              MOVS     r0,#0
00007c  9011              STR      r0,[sp,#0x44]
;;;83         ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div2;
00007e  9012              STR      r0,[sp,#0x48]
;;;84         ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
000080  9013              STR      r0,[sp,#0x4c]
;;;85         ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
000082  9014              STR      r0,[sp,#0x50]
;;;86         ADC_CommonInit(&ADC_CommonInitStructure);
000084  a811              ADD      r0,sp,#0x44
000086  f7fffffe          BL       ADC_CommonInit
;;;87     
;;;88         /* ADC3 初始化 ****************************************************************/
;;;89         ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
00008a  2000              MOVS     r0,#0
00008c  9015              STR      r0,[sp,#0x54]
;;;90         ADC_InitStructure.ADC_ScanConvMode = DISABLE;
00008e  f88d0058          STRB     r0,[sp,#0x58]
;;;91         ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
000092  2001              MOVS     r0,#1
000094  f88d0059          STRB     r0,[sp,#0x59]
;;;92         ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
000098  2000              MOVS     r0,#0
00009a  9017              STR      r0,[sp,#0x5c]
;;;93         ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
00009c  9018              STR      r0,[sp,#0x60]
;;;94         ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
00009e  9019              STR      r0,[sp,#0x64]
;;;95         ADC_InitStructure.ADC_NbrOfConversion = 1;
0000a0  2001              MOVS     r0,#1
0000a2  f88d0068          STRB     r0,[sp,#0x68]
;;;96         ADC_Init(ADC3, &ADC_InitStructure);
0000a6  a915              ADD      r1,sp,#0x54
0000a8  4810              LDR      r0,|L2.236|
0000aa  384c              SUBS     r0,r0,#0x4c
0000ac  f7fffffe          BL       ADC_Init
;;;97     
;;;98         /* ADC3 规则 channel_11 配置 *************************************/
;;;99         ADC_RegularChannelConfig(ADC3, ADC_Channel_11, 1, ADC_SampleTime_15Cycles);
0000b0  2301              MOVS     r3,#1
0000b2  461a              MOV      r2,r3
0000b4  210b              MOVS     r1,#0xb
0000b6  480d              LDR      r0,|L2.236|
0000b8  384c              SUBS     r0,r0,#0x4c
0000ba  f7fffffe          BL       ADC_RegularChannelConfig
;;;100    
;;;101        /* 使能DMA请求(单ADC模式) */
;;;102        ADC_DMARequestAfterLastTransferCmd(ADC3, ENABLE);
0000be  2101              MOVS     r1,#1
0000c0  480a              LDR      r0,|L2.236|
0000c2  384c              SUBS     r0,r0,#0x4c
0000c4  f7fffffe          BL       ADC_DMARequestAfterLastTransferCmd
;;;103    
;;;104        /* 使能 ADC3 DMA */
;;;105        ADC_DMACmd(ADC3, ENABLE);
0000c8  2101              MOVS     r1,#1
0000ca  4808              LDR      r0,|L2.236|
0000cc  384c              SUBS     r0,r0,#0x4c
0000ce  f7fffffe          BL       ADC_DMACmd
;;;106    
;;;107        /* 使能 ADC3 */
;;;108        ADC_Cmd(ADC3, ENABLE);
0000d2  2101              MOVS     r1,#1
0000d4  4805              LDR      r0,|L2.236|
0000d6  384c              SUBS     r0,r0,#0x4c
0000d8  f7fffffe          BL       ADC_Cmd
;;;109        
;;;110        /* 软件启动ADC转换 */ 
;;;111    	ADC_SoftwareStartConv(ADC3);
0000dc  4803              LDR      r0,|L2.236|
0000de  384c              SUBS     r0,r0,#0x4c
0000e0  f7fffffe          BL       ADC_SoftwareStartConv
;;;112    }
0000e4  b01b              ADD      sp,sp,#0x6c
0000e6  bd00              POP      {pc}
;;;113    
                          ENDP

                  |L2.232|
                          DCD      0x00600004
                  |L2.236|
                          DCD      0x4001224c
                  |L2.240|
                          DCD      ADC3ConvertedValue
                  |L2.244|
                          DCD      0x40026410
                  |L2.248|
                          DCD      0x40020800

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  ADC3ConvertedValue
                          %        40

                          AREA ||.data||, DATA, ALIGN=2

                  reduction_factor
000000  419e6666          DCFS     0x419e6666 ; 19.799999237060547
                  ADC3ConvertedVoltage
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_adc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_adc_c_047771d0____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_adc_c_047771d0____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_adc_c_047771d0____REVSH|
#line 144
|__asm___9_bsp_adc_c_047771d0____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_adc_c_047771d0____RRX|
#line 300
|__asm___9_bsp_adc_c_047771d0____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
