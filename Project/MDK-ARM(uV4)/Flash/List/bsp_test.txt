; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_test.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_test.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -D__MICROLIB -D__UVISION_VERSION=525 -D_RTE_ -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\bsp_test.crf ..\..\User\bsp_stm32f4xx\src\bsp_test.c]
                          THUMB

                          AREA ||i.bsp_test||, CODE, READONLY, ALIGN=2

                  bsp_test PROC
;;;3      
;;;4      void bsp_test()
000000  b510              PUSH     {r4,lr}
;;;5      {
000002  b08a              SUB      sp,sp,#0x28
;;;6      	uint16_t TimerPeriod = 0;  //ARR值
000004  2400              MOVS     r4,#0
;;;7      	
;;;8      		GPIO_InitTypeDef GPIO_InitStructure;
;;;9      	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;10     	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;11     	
;;;12     		  /* TIM1 clock enable */
;;;13         RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);
000006  2101              MOVS     r1,#1
000008  4608              MOV      r0,r1
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;14     	
;;;15     	  /* GPIOA and GPIOB clocks enable */
;;;16     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA , ENABLE);
00000e  2101              MOVS     r1,#1
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;17     	
;;;18     		//配置TIM1 Channel_1(PA8)  Channel_2(PA9) 
;;;19     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9;
000016  f44f7040          MOV      r0,#0x300
00001a  9008              STR      r0,[sp,#0x20]
;;;20     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
00001c  2002              MOVS     r0,#2
00001e  f88d0024          STRB     r0,[sp,#0x24]
;;;21     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000022  2003              MOVS     r0,#3
000024  f88d0025          STRB     r0,[sp,#0x25]
;;;22     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000028  2000              MOVS     r0,#0
00002a  f88d0026          STRB     r0,[sp,#0x26]
;;;23     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
00002e  2001              MOVS     r0,#1
000030  f88d0027          STRB     r0,[sp,#0x27]
;;;24     	GPIO_Init(GPIOA, &GPIO_InitStructure);
000034  a908              ADD      r1,sp,#0x20
000036  481d              LDR      r0,|L1.172|
000038  f7fffffe          BL       GPIO_Init
;;;25     	
;;;26     		 /* Connect TIM pins to AF1 */
;;;27     	GPIO_PinAFConfig(GPIOA, GPIO_PinSource8, GPIO_AF_TIM1);
00003c  2201              MOVS     r2,#1
00003e  2108              MOVS     r1,#8
000040  481a              LDR      r0,|L1.172|
000042  f7fffffe          BL       GPIO_PinAFConfig
;;;28     	GPIO_PinAFConfig(GPIOA, GPIO_PinSource9, GPIO_AF_TIM1);
000046  2201              MOVS     r2,#1
000048  2109              MOVS     r1,#9
00004a  4818              LDR      r0,|L1.172|
00004c  f7fffffe          BL       GPIO_PinAFConfig
;;;29     	
;;;30     		 /*TIM1 input clock (TIM1CLK) is set to 2 * APB2 clock (PCLK2), since APB2 
;;;31         prescaler is different from 1.   
;;;32         TIM1CLK = 2 * PCLK2  
;;;33         PCLK2 = HCLK / 2 
;;;34         => TIM1CLK = 2 * (HCLK / 2) = HCLK = SystemCoreClock
;;;35       
;;;36         TIM1CLK is fixed to SystemCoreClock, the TIM1 Prescaler is equal to 0 so the 
;;;37         TIM1 counter clock used is SystemCoreClock (168MHz).
;;;38     
;;;39         The objective is to generate PWM signal at _Frequency KHz:
;;;40         - TIM1_Period = (SystemCoreClock / frequency) - 1   */
;;;41     
;;;42     	 /* Compute the value to be set in ARR register to generate signal frequency at _Frequency Khz */
;;;43          TimerPeriod = (SystemCoreClock / 20000 ) - 1;
000050  4817              LDR      r0,|L1.176|
000052  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000054  f6446120          MOV      r1,#0x4e20
000058  fbb0f0f1          UDIV     r0,r0,r1
00005c  1e40              SUBS     r0,r0,#1
00005e  b284              UXTH     r4,r0
;;;44     	 
;;;45     	/* Time Base configuration */
;;;46     	TIM_TimeBaseStructure.TIM_Prescaler = 0;
000060  2000              MOVS     r0,#0
000062  f8ad0014          STRH     r0,[sp,#0x14]
;;;47     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
000066  f8ad0016          STRH     r0,[sp,#0x16]
;;;48     	TIM_TimeBaseStructure.TIM_Period = TimerPeriod;
00006a  9406              STR      r4,[sp,#0x18]
;;;49     	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
00006c  f8ad001c          STRH     r0,[sp,#0x1c]
;;;50     
;;;51         TIM_TimeBaseInit(TIM1, &TIM_TimeBaseStructure);
000070  a905              ADD      r1,sp,#0x14
000072  4810              LDR      r0,|L1.180|
000074  f7fffffe          BL       TIM_TimeBaseInit
;;;52     	
;;;53     	  TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
000078  2030              MOVS     r0,#0x30
00007a  f8ad0000          STRH     r0,[sp,#0]
;;;54       TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00007e  2001              MOVS     r0,#1
000080  f8ad0002          STRH     r0,[sp,#2]
;;;55       TIM_OCInitStructure.TIM_Pulse = 10;
000084  200a              MOVS     r0,#0xa
000086  9002              STR      r0,[sp,#8]
;;;56       TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
000088  2002              MOVS     r0,#2
00008a  f8ad000c          STRH     r0,[sp,#0xc]
;;;57       
;;;58         TIM_OC1Init(TIM1, &TIM_OCInitStructure);
00008e  4669              MOV      r1,sp
000090  4808              LDR      r0,|L1.180|
000092  f7fffffe          BL       TIM_OC1Init
;;;59     		TIM_OC1PreloadConfig(TIM1,TIM_OCPreload_Enable);          //输出比较通道1相关预装载寄存器使能  CCME1->OC1PE=1
000096  2108              MOVS     r1,#8
000098  4806              LDR      r0,|L1.180|
00009a  f7fffffe          BL       TIM_OC1PreloadConfig
;;;60     	 
;;;61     	 /* TIM enable counter */
;;;62       TIM_Cmd(TIM1, ENABLE);
00009e  2101              MOVS     r1,#1
0000a0  4804              LDR      r0,|L1.180|
0000a2  f7fffffe          BL       TIM_Cmd
;;;63     	
;;;64     	
;;;65     }
0000a6  b00a              ADD      sp,sp,#0x28
0000a8  bd10              POP      {r4,pc}
                          ENDP

0000aa  0000              DCW      0x0000
                  |L1.172|
                          DCD      0x40020000
                  |L1.176|
                          DCD      SystemCoreClock
                  |L1.180|
                          DCD      0x40010000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_test.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_test_c_bsp_test____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_test_c_bsp_test____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_test_c_bsp_test____REVSH|
#line 144
|__asm___10_bsp_test_c_bsp_test____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_test_c_bsp_test____RRX|
#line 300
|__asm___10_bsp_test_c_bsp_test____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
