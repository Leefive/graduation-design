; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\USMART -I..\..\User\bsp_stm32f4xx\LCD -I..\..\User\bsp_stm32f4xx\phase_shift -I..\..\User\bsp_stm32f4xx\PWMInput -I..\..\User\bsp_stm32f4xx\ADC -D__MICROLIB -D__UVISION_VERSION=525 -D_RTE_ -DSTM32F427xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp_stm32f4xx\bsp.c]
                          THUMB

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;91     */
;;;92     void bsp_Idle(void)
000000  4770              BX       lr
;;;93     {
;;;94     	/* --- 喂狗 */
;;;95     
;;;96     	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;97     
;;;98     	/* 对于 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;99     	//GUI_Exec();
;;;100    
;;;101    	/* 对于 uIP 协议实现，可以插入uip轮询函数 */
;;;102    }
;;;103    
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=2

                  bsp_Init PROC
;;;28     */
;;;29     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;30     {
;;;31     	/*
;;;32     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;33     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;34     
;;;35     		系统时钟缺省配置为168MHz，如果需要更改，可以修改 system_stm32f4xx.c 文件
;;;36     	*/
;;;37     	bsp_InitUart(); 	/* 初始化串口 */
000002  f7fffffe          BL       bsp_InitUart
;;;38     	bsp_InitTimer();	/* 初始化系统滴答定时器 */
000006  f7fffffe          BL       bsp_InitTimer
;;;39     	
;;;40     	Lcd_Init();
00000a  f7fffffe          BL       Lcd_Init
;;;41     	
;;;42     	bsp_InitLed(); 		/* 初始LED指示灯端口 */
00000e  f7fffffe          BL       bsp_InitLed
;;;43     	
;;;44     	usmart_dev.init(84); 	//初始化USMART
000012  4806              LDR      r0,|L2.44|
000014  6841              LDR      r1,[r0,#4]  ; usmart_dev
000016  2054              MOVS     r0,#0x54
000018  4788              BLX      r1
;;;45     	
;;;46     	bsp_phase_shift_init(20000,100);
00001a  2164              MOVS     r1,#0x64
00001c  f6446020          MOV      r0,#0x4e20
000020  f7fffffe          BL       bsp_phase_shift_init
;;;47     
;;;48     //	bsp_SetTIMOutPWM(GPIOA,GPIO_Pin_5,TIM2,1,5000,3700);
;;;49     //	
;;;50     	bsp_InitADC();
000024  f7fffffe          BL       bsp_InitADC
;;;51     //	bsp_adc_single_convert_init();
;;;52     //    bsp_pwminput_init();
;;;53     }
000028  bd10              POP      {r4,pc}
;;;54     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      usmart_dev

                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;63     */
;;;64     void bsp_RunPer10ms(void)
000000  4770              BX       lr
;;;65     {
;;;66     	
;;;67     }
;;;68     
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;77     */
;;;78     void bsp_RunPer1ms(void)
000000  4770              BX       lr
;;;79     {
;;;80     	//TOUCH_Scan();	/* 触摸扫描 */
;;;81     }
;;;82     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 144
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____RRX|
#line 300
|__asm___5_bsp_c_bsp_Init____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
